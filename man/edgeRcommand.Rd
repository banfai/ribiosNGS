% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slurm.R
\name{edgeRcommand}
\alias{edgeRcommand}
\title{Export an DGEList, designMatrix, and contrastMatrix to files and return the
command to run the edgeR script}
\usage{
edgeRcommand(
  dgeList,
  designMatrix,
  contrastMatrix,
  outdir = "edgeR_output",
  outfilePrefix = "an-unnamed-project-",
  mps = FALSE,
  limmaVoom = FALSE,
  appendGmt = NULL,
  debug = FALSE
)
}
\arguments{
\item{dgeList}{An \code{DGEList} object with \code{counts}, \code{genes},
and \code{samples}}

\item{designMatrix}{The design matrix to model the data}

\item{contrastMatrix}{The contrast matrix matching the design matrix}

\item{outdir}{Output directory of the edgeR script. Default value
"edgeR_output".}

\item{outfilePrefix}{Prefix of the output files, for instance a reasonable 
name of the project, to identify the files uniquely. The files will be written in 
\code{file.path(OUTDIR, 'input_data')}.}

\item{mps}{Logical, whether molecular-phenotyping analysis is run.}

\item{limmaVoom}{Logical, whether the limma-voom model is run instead of the edgeR model}

\item{appendGmt}{\code{NULL} or character string, path to an additional
GMT file besides the default GMT file used to perform gene-set analysis.
The GMT file must exist.}

\item{debug}{Logical, if \code{TRUE}, the source code of Rscript is used
instead of the installed version.}
}
\description{
Export an DGEList, designMatrix, and contrastMatrix to files and return the
command to run the edgeR script
}
\note{
Following checks are done internally: \itemize{ \item The design
matrix must have the same number of rows as the columns of the count matrix.
\item The contrast matrix must have the same number of rows as the columns
of the design matrix.  \item Row names of the design matrix match the column
names of the expression matrix. In case of suspect, the program will stop
and report. }

The output file names start with the outfilePrefix, followed by '-' and
customed file suffixes.
}
\examples{

 mat <- matrix(rnbinom(100, mu=5, size=2), ncol=10)
 rownames(mat) <- sprintf("gene\%d", 1:nrow(mat))
 myFac <- gl(2,5, labels=c("Control", "Treatment"))
 y <- edgeR::DGEList(counts=mat, group=myFac)
 myDesign <- model.matrix(~myFac); colnames(myDesign) <- levels(myFac)
 myContrast <- limma::makeContrasts(Treatment, levels=myDesign)
 edgeRcommand(y, designMatrix=myDesign, contrastMatrix=myContrast,
     outfilePrefix="test", outdir=tempdir())

}
